# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2019-01-23 20:16
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie_title', models.CharField(help_text=b"names a movie's title", max_length=300)),
                ('description', models.CharField(help_text=b'details about a movie, such as ratings, release etc', max_length=500)),
                ('recently_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name=b'Created time')),
            ],
            options={
                'get_latest_by': 'recently_added',
            },
        ),
        migrations.CreateModel(
            name='MovieWatchList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie_list_name', models.CharField(blank=True, help_text=b'The title of the list', max_length=100)),
                ('list_created', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(help_text=b"The unregistered User's name", max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(help_text=b'Posts made by users below a review', max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Preformer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text=b'name of the preformer', max_length=300)),
                ('description', models.CharField(help_text=b'gives information about the preformer', max_length=500)),
                ('movies', models.ManyToManyField(related_name='movie', to='movies.Movie')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_title', models.CharField(help_text=b'A title for the review', max_length=50)),
                ('review', models.TextField(help_text=b'The body of the review', max_length=5000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('authored_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review', to=settings.AUTH_USER_MODEL)),
                ('movies', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review', to='movies.Movie')),
                ('preformers', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='review', to='movies.Preformer')),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='reviews',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post', to='movies.Review'),
        ),
        migrations.AddField(
            model_name='movie',
            name='movie_lists',
            field=models.ManyToManyField(blank=True, related_name='movie_list', to='movies.MovieWatchList'),
        ),
    ]
